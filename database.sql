DROP TABLE IF EXISTS Restaurant;
DROP TABLE IF EXISTS Menus;
DROP TABLE IF EXISTS Dishes;
DROP TABLE IF EXISTS Orders;
DROP TABLE IF EXISTS Customers;
DROP TABLE IF EXISTS Review;
DROP TABLE IF EXISTS FavouriteRestaurant;
DROP TABLE IF EXISTS FavouriteDish;

PRAGMA foreign_keys=ON;


CREATE TABLE User
(
    UserId INT PRIMARY KEY,
    Username NVARCHAR(255) NOT NULL,
    Password NVARCHAR(255) NOT NULL;
    Adress NVARCHAR(255),
    PhoneNumber char(10),

);

CREATE TABLE Customer(
    UserId INT NOT NULL REFERENCES User(UserId) ON DELETE CASCADE ON UPDATE CASCADE,
    CONSTRAINT  Customer_PK PRIMARY KEY (UserId)

);

CREATE TABLE Owner(
    UserId INT NOT NULL REFERENCES User(UserId) ON DELETE CASCADE ON UPDATE CASCADE,
    CONSTRAINT Owner_PK PRIMARY KEY (UserId)
);


CREATE TABLE Restaurant(
    RestaurantId INT PRIMARY KEY,
    Name NVARCHAR(255) NOT NULL,
    Adress NVARCHAR(255),
    Category NVARCHAR(255),
    UserId INT NOT NULL,
    CONSTRAINT Owner_FK FOREIGN KEY (UserID) REFERENCES Owner(UserId) ON DELETE CASCADE ON UPDATE CASCADE,


);

CREATE TABLE Menu(
    MenuId INT PRIMARY KEY,
    RestaurantId INT NOT NULL,
    CONSTRAINT Restaurant_FK FOREIGN KEY (RestaurantId) REFERENCES Restaurant(RestaurantId) ON DELETE NO NO ACTION ON UPDATE NO ACTION,
);   


CREATE TABLE Dish(
    DishId INT PRIMARY KEY,
    MenuId INT NOT NULL,
    Name NVARCHAR(255) NOT NULL,
    Price NUMBER NOT NULL,
    Photo NVARCHAR(255) DEFAULT "default.jpg",
    Category NVARCHAR(255),
    CONSTRAINT Menu_FK FOREIGN KEY (MenuId) REFERENCES Menu(MenuId) ON DELETE NO ACTION ON UPDATE NO ACTION,
);

CREATE TABLE Order(
    OrderId INT PRIMARY KEY,
    CustomerId INT NOT NULL,
    CONSTRAINT Customer_FK FOREIGN KEY (CustomerId) REFERENCES Customer(UserId) ON DELETE NO ACTION ON UPDATE NO ACTION,
    
);

CREATE TABLE DishOrder(
    DishOrderId INT PRIMARY KEY,
    DishId INT NOT NULL,
    OrderId INT NOT NULL,
    CONSTRAINT Dish_Fk FOREIGN KEY (DishId) REFERENCES Dish(DishId) ON DELETE NO ACTION ON UPDATE NO ACTION,
    CONSTRAINT Order_FK FOREIGN KEY (OrderId) REFERENCES Order(OrderId) ON DELETE NO ACTION ON UPDATE NO ACTION,
);

CREATE TABLE FavouriteRestaurant(
    FavRestId INT PRIMARY KEY,
    RestaurantId INT NOT NULL,
    CustomerId INT NOT NULL,
    CONSTRAINT Customer_FK FOREIGN KEY (CustomerId) REFERENCES Customer(UserId) ON DELETE NO ACTION ON UPDATE NO ACTION,
    CONSTRAINT Restaurant_FK FOREIGN KEY (RestaurantId) REFERENCES Restaurant(RestaurantId) ON DELETE NO NO ACTION ON UPDATE NO ACTION,

);

CREATE TABLE FavouriteDish(
    FavDish INT PRIMARY KEY,
    DishId INT NOT NULL,
    CustomerId INT NOT NULL,
    CONSTRAINT Customer_FK FOREIGN KEY (CustomerId) REFERENCES Customer(UserId) ON DELETE NO ACTION ON UPDATE NO ACTION,
    CONSTRAINT Dish_Fk FOREIGN KEY (DishId) REFERENCES Dish(DishId) ON DELETE NO ACTION ON UPDATE NO ACTION,
);

CREATE TABLE Review(
    ReviewId INT PRIMARY KEY,
    RestaurantId INT NOT NULL,
    CustomerId INT NOT NULL,
    Score INT NOT NULL,
    Review NVARCHAR(1000), 
    Answer NVARCHAR(1000),
    CONSTRAINT Customer_FK FOREIGN KEY (CustomerId) REFERENCES Customer(UserId) ON DELETE NO ACTION ON UPDATE NO ACTION,
    CONSTRAINT Restaurant_FK FOREIGN KEY (RestaurantId) REFERENCES Restaurant(RestaurantId) ON DELETE NO NO ACTION ON UPDATE NO ACTION,
);